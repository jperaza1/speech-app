{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/web-speech.service.ts","./src/app/service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/alert-dialog/alert-dialog.component.ts","./src/app/components/alert-dialog/alert-dialog.component.html","./src/app/app.module.ts","./src/app/models/trip-dto.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable, NgZone, EventEmitter } from '@angular/core';\r\nimport { Observable, Observer } from 'rxjs';\r\nimport { IEvent } from '../models/IEvent';\r\n\r\ninterface IWindow extends Window {\r\n    webkitSpeechRecognition: any;\r\n    mozSpeechRecognition: any;\r\n    msSpeechRecognition: any;\r\n    SpeechRecognition: any;\r\n}\r\n\r\n@Injectable()\r\nexport class WebSpeechService {\r\n    private engine: any = null;\r\n\r\n    private recognizing = false;\r\n    private observer: Observer<IEvent>;\r\n    constructor(\r\n        private zone: NgZone,\r\n        ) {\r\n        this.create();\r\n    }\r\n\r\n    /**\r\n     * Starts the audio capture and speech recognition engine.\r\n     * @returns {Observable<IEvent>} Observable that emits any event related to the speech recognition,\r\n     * including the resulting transcript and any error that might occur...\r\n     */\r\n    start(): Observable<IEvent> {\r\n        if (!this.recognizing) {\r\n            this.engine.start();\r\n        }\r\n        return new Observable((observer: Observer<IEvent>) => { this.observer = this.observer || observer; });\r\n    }\r\n\r\n    /**\r\n     * Stops the audio capture and speech recognition engine.\r\n     */\r\n    stop() {\r\n        this.engine.stop();\r\n        if (this.observer) {\r\n            // Give it some time to any additional event to propragate to subscribers...\r\n            setTimeout(() => { this.observer = null; }, 500);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true if audio capture is in progress; false, otherwise.\r\n     * @returns {boolean}\r\n     */\r\n    isRecognizing(): boolean {\r\n        return this.recognizing;\r\n    }\r\n\r\n    /**\r\n     * Helper function to create SpeechRecognition engine and bind relevant events.\r\n     */\r\n    private create() {\r\n        this.engine = this.createEngine();\r\n        this.engine.continuous = true;\r\n        this.engine.lang = 'en-US';\r\n        this.engine.interimResults = false;\r\n        //this.engine.maxAlternatives = 1;\r\n\r\n        this.engine.onerror = this.onerror.bind(this);\r\n        this.engine.onresult = this.onresult.bind(this);\r\n        this.engine.onaudiostart = this.onaudiostart.bind(this);\r\n        this.engine.onaudioend = this.onaudioend.bind(this);\r\n        this.engine.onnomatch = this.onnomatch.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Helper function to create SpeechRecognition object supporting multiple browsers' engines.\r\n     */\r\n    private createEngine(): any {\r\n        const win: IWindow = <IWindow><unknown>window;\r\n        return new (win.webkitSpeechRecognition ||\r\n                    win.mozSpeechRecognition ||\r\n                    win.msSpeechRecognition ||\r\n                    win.SpeechRecognition)();\r\n    };\r\n\r\n    private onaudiostart() {\r\n        this.recognizing = true;\r\n\r\n        this.zone.run(() => {\r\n            this.observer.next({\r\n                type: 'hint',\r\n                value: 'Capturing audio...'\r\n            });\r\n        });\r\n    }\r\n\r\n    private async onaudioend() {\r\n        this.recognizing = false;\r\n        this.zone.run(() => {\r\n            this.observer.next({\r\n                type: 'hint',\r\n                value: 'Stopped capturing audio.'\r\n            });\r\n        });\r\n        \r\n    }\r\n\r\n    private onnomatch() {\r\n        this.zone.run(() => {\r\n            this.observer.next({\r\n                type: 'hint',\r\n                value: 'No match!'\r\n            });\r\n        });\r\n    }\r\n\r\n    private onerror(event: any) {\r\n        this.recognizing = false;\r\n\r\n        this.zone.run(() => {\r\n            this.observer.error({\r\n            type: 'error',\r\n            value: event.error\r\n            });\r\n        });\r\n\r\n        this.stop();\r\n    }\r\n\r\n    private async onresult(event: any) {\r\n        this.zone.run(() => {\r\n            this.transcriptText(event);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Basic parsing of the speech recognition result object, emitting 'tag' event for subscribers.\r\n     * @param event The onresult event returned by the SpeechRecognition engine\r\n     */\r\n    private transcriptText(event: any) {\r\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\r\n            if (event.results[i].isFinal) {\r\n            this.observer.next({\r\n                type: 'tag',\r\n                value: event.results[i][0].transcript\r\n            });\r\n            }\r\n        }\r\n    }\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { DataDto } from \"./data-dto\";\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ServiceHttp {\r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n\r\n    updateToken(data: DataDto): Promise<any> {\r\n        console.log(data);\r\n        return this.http.post<any>(`https://localhost:44367/api/v2/SmsValidator/SaveMp3`, data).toPromise();\r\n    }\r\n\r\n}","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription, Observable, Observer } from 'rxjs';\r\nimport { WebSpeechService } from './services/web-speech.service';\r\nimport { ServiceHttp } from './service';\r\nimport { TripDto } from './models/trip-dto';\r\nimport { ConversationDto } from './models/conversation-dto';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'speech-app';\r\n\r\n  webSpeechSubscription: Subscription;\r\n  \r\n  model:TripDto = new TripDto();\r\n\r\n  webSpeechTranscript: string;\r\n  synth = window.speechSynthesis;\r\n  globalQuestionNumber: number = 0;\r\n  safeblobUrl:string;\r\n  backupConversation:ConversationDto[] = [];\r\n  constructor(\r\n    private webSpeechService: WebSpeechService,\r\n    public _serviceHttp: ServiceHttp,\r\n  ){ \r\n  }\r\n\r\n  async ngOnInit() {\r\n    const voices = this.synth.getVoices();\r\n    console.log(voices);\r\n  }\r\n\r\n  async speeck(text: string){\r\n    return new Promise((resolve, reject) => {\r\n      var utterThis = new SpeechSynthesisUtterance(text);\r\n      utterThis.pitch = 0;\r\n      utterThis.rate = 1;\r\n      utterThis.lang = 'en-US';\r\n      this.synth.speak(utterThis);\r\n      utterThis.onend = () => resolve('Listo');\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.stopWebSpeech();\r\n  }\r\n\r\n  stopWebSpeech() {\r\n    this.webSpeechService.stop();\r\n    if (this.webSpeechSubscription) {\r\n      this.webSpeechSubscription.unsubscribe();\r\n      this.webSpeechSubscription = null;\r\n    }\r\n  }\r\n\r\n  async startWebSpeech() {\r\n    // this.audioRecorderService.startRecording();\r\n    this.globalQuestionNumber = 1;\r\n    await this.TallInstructions();\r\n    \r\n  }\r\n\r\n  async webSpeech(): Promise<any>{\r\n    return new Promise<any>((resolve, reject) => {\r\n      this.webSpeechSubscription = this.webSpeechService.start().subscribe((data: any) => {\r\n        if(data.type === 'tag') {\r\n          console.log('WebSpeechAPI: ' + JSON.stringify(data));\r\n          resolve(data);\r\n        }\r\n      }, error => {\r\n          reject(error);\r\n      })\r\n    });\r\n  }\r\n\r\n  async noSpeeckTall(){\r\n    await this.speeck(\"I'm sorry, you have not said anything, the question will be asked again\");\r\n  }\r\n\r\n  async TallInstructions(){\r\n    this.backupConversation.push({ type: \"Angie\", conversation:'Hi, I am Angie, an SOS Virtual Dispatcher'});\r\n    await this.speeck(\"  Hi, I am Angie, an SOS Virtual Dispatcher....\");\r\n    this.backupConversation.push({ type: \"Angie\", conversation: 'How can i help You ?' });\r\n    await this.speeck('...   How can i help You ?');\r\n    const response = await this.webSpeech();\r\n    this.stopWebSpeech();\r\n    this.backupConversation.push({ type: 'Client', conversation: response.value });\r\n\r\n    await this.UpdateLoad(response.value);\r\n  }\r\n\r\n  async UpdateLoad(sentence: string) {\r\n    const keywords = [\"update\", \"load\", \"truck\"];\r\n\r\n    const matches = this.keywordCount(sentence, keywords);\r\n\r\n    if(matches > 0) {\r\n      await this.validateTruckNumber(sentence);\r\n\r\n      \r\n    }else {\r\n      await this.speeck(\"I'm sorry, you have not said anything, the question will be asked again\");\r\n      await this.speeck('How can i help You ?');\r\n      const response = await this.webSpeech();\r\n      this.stopWebSpeech();\r\n      await this.UpdateLoad(response.value)\r\n    }\r\n  }\r\n\r\n  async validateTruckNumber(sentence: string) {\r\n    const truckNumber = this.extractTruckNumber(sentence);\r\n    console.log(truckNumber);\r\n    if(truckNumber == null) {\r\n      this.backupConversation.push({ type: \"Angie\", conversation: 'Please repeat the truck number again' });\r\n      await this.speeck(\"  Please repeat the truck number again.....\");\r\n      const response = await this.webSpeech();\r\n      this.stopWebSpeech();\r\n      await this.validateTruckNumber(response.value);\r\n    } else {\r\n      await this.getLoadInformation(truckNumber);\r\n    }\r\n  }\r\n\r\n  async getLoadInformation(truckNumber: string) {\r\n    this.backupConversation.push({ type: \"Angie\", conversation: 'Looking for information about the last load, please wait a moment.' });\r\n    await this.speeck(\"  Looking for information about the last load, please wait a moment.....\");\r\n    \r\n    await this.readLoadInformation();\r\n  }\r\n\r\n  async readLoadInformation() {\r\n    this.backupConversation.push({ type: \"Angie\", conversation: 'We do have the POD and Lumper Receipt for the Last Delivery in Los Angeles, CA. However, Billing is Pending. Do you want me to take care of the Billing Now?' });\r\n    await this.speeck(\"  We do have the POD and Lumper Receipt for the Last Delivery in Los Angeles, CA. However, Billing is Pending. Do you want me to take care of the Billing Now?.....\");\r\n    \r\n    const response = await this.webSpeech();\r\n    this.stopWebSpeech();\r\n    await this.validateLoadInformation(response.value);\r\n\r\n  }\r\n\r\n  async validateLoadInformation(sentence: string) {\r\n    const keywordsNegative = [\"no\"];\r\n    const keywordsPositive = [\"yes\"]\r\n\r\n    const matchesNegative = this.keywordCount(sentence, keywordsNegative);\r\n\r\n    if(matchesNegative > 0) {\r\n      await this.showNegativeResponse()\r\n      return;\r\n    }\r\n      \r\n\r\n    const matchesPositive = this.keywordCount(sentence, keywordsPositive);\r\n\r\n    if(matchesPositive > 0) {\r\n\r\n      await this.validatingForOtherActions(sentence);\r\n\r\n\r\n    } else {\r\n      this.backupConversation.push({ type: \"Angie\", conversation: \"I'm sorry, you have not said anything, can you repeat your answer\" });\r\n      await this.speeck(\"I'm sorry, you have not said anything, can you repeat your answer\");\r\n      const response = await this.webSpeech();\r\n      this.stopWebSpeech();\r\n      this.validateLoadInformation(response.value)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  async showNegativeResponse() {\r\n    this.backupConversation.push({ type: \"Angie\", conversation: 'It was a pleasure to help you, if you need anything else do not hesitate to press the help button.' });\r\n    await this.speeck(\"  It was a pleasure to help you, if you need anything else do not hesitate to press the help button......\");\r\n  }\r\n\r\n\r\n\r\n  keywordCount(sentence: string, keywords: string[]): number {\r\n    const words = sentence.toLowerCase().split(' ');\r\n    const keywordMatches = words.filter(word => keywords.includes(word));\r\n    return keywordMatches.length;\r\n  }\r\n\r\n  extractTruckNumber(sentence: string): string | null {\r\n    const match = sentence.match(/truck ((\\d+\\s*)+)/i) || sentence.match(/ ((\\d+\\s*)+)/i);\r\n    return match ? match[1].replace(/\\s+/g, '') : null;\r\n  }\r\n\r\n  async validatingForOtherActions(sentence: string) {\r\n    this.backupConversation.push({ type: \"Angie\", conversation: 'If you need to add a charge tell me add the amount for the name of the charge, if you need to bill tell me bill the load.' });\r\n    await this.speeck(\"If you need to add a charge tell me add the amount for the name of the charge, if you need to bill tell me bill the load.\");\r\n    const response = await this.webSpeech();\r\n    this.stopWebSpeech();\r\n  }\r\n\r\n  async help(){\r\n    this.TallInstructions();\r\n  }\r\n\r\n}\r\n","<div class=\"content\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12 col-md-12 col-md-offset-1 col-lg-12 col-lg-offset-2\">\r\n      <mat-card class=\"card\">\r\n        <div class=\"h4 title text-uppercase inline\">Web Speech API Create Loads</div>\r\n        <button mat-button color=\"primary\" class=\"inline\" color=\"warn\"\r\n                [disabled]=\"webSpeechSubscription\"\r\n                (click)=\"startWebSpeech()\">SOS Virtual Dispatcher\r\n        </button>\r\n\r\n        <mat-card-content class=\"mb-0\">\r\n          <p *ngFor=\"let item of backupConversation\" [ngStyle]=\"{ 'color': (item.type === 'Client') ? 'green': 'white', 'font-weight': 'bolder' }\" >{{item.type}} - {{item.conversation}}</p>\r\n        </mat-card-content>\r\n\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <button mat-mini-fab color=\"primary\" (click)=\"help()\">\r\n          <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\">help_outline</mat-icon>\r\n        </button>\r\n        \r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n\r\n\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MatDialogConfig, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-alert-dialog',\r\n  templateUrl: './alert-dialog.component.html'\r\n})\r\nexport class AlertDialogComponent {\r\n  title = 'Alert'\r\n  text = 'Oops! Something wrong happened...';\r\n\r\n  constructor(public dialogRef: MatDialogRef<AlertDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: any) {\r\n    if (data) {\r\n      this.title = data.title;\r\n      this.text = data.text;\r\n    }\r\n  }\r\n\r\n}\r\n","<p>alert-dialog works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AlertDialogComponent } from './components/alert-dialog/alert-dialog.component';\r\nimport { WebSpeechService } from './services/web-speech.service';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgAudioRecorderModule } from 'ng-audio-recorder';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AlertDialogComponent,\r\n    AlertDialogComponent\r\n  ],\r\n  entryComponents: [AlertDialogComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    NgAudioRecorderModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [WebSpeechService],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","export class TripDto {\r\n    truckNumber: number;\r\n    customer: string;\r\n    origin: string;\r\n    pickUp: string;\r\n    destination: string;\r\n    delivery: string;\r\n    customerRate: number;\r\n    isCorrect: string;\r\n}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}